/*
 * KomMonitor Harvester API
 * KomMonitor Harvester API to harvest/transfer spatial data from one instance to another
 *
 * OpenAPI spec version: 0.0.1
 * Contact: christian.danowski-buhren@hs-bochum.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {IndicatorDataMappingType} from './IndicatorDataMappingType';
import {SpatialUnitDataMappingType} from './SpatialUnitDataMappingType';

/**
 * The DataMappingType model module.
 * @module model/DataMappingType
 * @version 0.0.1
 */
export class DataMappingType {
  /**
   * Constructs a new <code>DataMappingType</code>.
   * data mapping containing the required infos about what data shall be transferred
   * @alias module:model/DataMappingType
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DataMappingType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataMappingType} obj Optional instance to populate.
   * @return {module:model/DataMappingType} The populated <code>DataMappingType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DataMappingType();
      if (data.hasOwnProperty('spatialUnitMappingDefs'))
        obj.spatialUnitMappingDefs = ApiClient.convertToType(data['spatialUnitMappingDefs'], [SpatialUnitDataMappingType]);
      if (data.hasOwnProperty('indicatorMappingDefs'))
        obj.indicatorMappingDefs = ApiClient.convertToType(data['indicatorMappingDefs'], [IndicatorDataMappingType]);
    }
    return obj;
  }
}

/**
 * array of spatial unit feature mapping definitions
 * @member {Array.<module:model/SpatialUnitDataMappingType>} spatialUnitMappingDefs
 */
DataMappingType.prototype.spatialUnitMappingDefs = undefined;

/**
 * array of indicator feature mapping definitions
 * @member {Array.<module:model/IndicatorDataMappingType>} indicatorMappingDefs
 */
DataMappingType.prototype.indicatorMappingDefs = undefined;

