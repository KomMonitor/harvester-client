/*
 * KomMonitor Harvester API
 * KomMonitor Harvester API to harvest/transfer spatial data from one instance to another
 *
 * OpenAPI spec version: 0.0.1
 * Contact: christian.danowski-buhren@hs-bochum.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {SummaryTypeErrorsOccurred} from './SummaryTypeErrorsOccurred';

/**
 * The SummaryType model module.
 * @module model/SummaryType
 * @version 0.0.1
 */
export class SummaryType {
  /**
   * Constructs a new <code>SummaryType</code>.
   * generic summary information about harvested data
   * @alias module:model/SummaryType
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SummaryType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SummaryType} obj Optional instance to populate.
   * @return {module:model/SummaryType} The populated <code>SummaryType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SummaryType();
      if (data.hasOwnProperty('sourceDatasetName'))
        obj.sourceDatasetName = ApiClient.convertToType(data['sourceDatasetName'], 'String');
      if (data.hasOwnProperty('sourceDatasetId'))
        obj.sourceDatasetId = ApiClient.convertToType(data['sourceDatasetId'], 'String');
      if (data.hasOwnProperty('targetDatasetName'))
        obj.targetDatasetName = ApiClient.convertToType(data['targetDatasetName'], 'String');
      if (data.hasOwnProperty('targetDatasetId'))
        obj.targetDatasetId = ApiClient.convertToType(data['targetDatasetId'], 'String');
      if (data.hasOwnProperty('harvestProcessResult'))
        obj.harvestProcessResult = ApiClient.convertToType(data['harvestProcessResult'], 'String');
      if (data.hasOwnProperty('errorsOccurred'))
        obj.errorsOccurred = ApiClient.convertToType(data['errorsOccurred'], [SummaryTypeErrorsOccurred]);
    }
    return obj;
  }
}

/**
 * the name of the imported  source dataset.
 * @member {String} sourceDatasetName
 */
SummaryType.prototype.sourceDatasetName = undefined;

/**
 * the id of the imported  source dataset.
 * @member {String} sourceDatasetId
 */
SummaryType.prototype.sourceDatasetId = undefined;

/**
 * the name of the target dataset.
 * @member {String} targetDatasetName
 */
SummaryType.prototype.targetDatasetName = undefined;

/**
 * the id of the target dataset.
 * @member {String} targetDatasetId
 */
SummaryType.prototype.targetDatasetId = undefined;

/**
 * Allowed values for the <code>harvestProcessResult</code> property.
 * @enum {String}
 * @readonly
 */
SummaryType.HarvestProcessResultEnum = {
  /**
   * value: "COMPLETED WITHOUT ERRORS"
   * @const
   */
  COMPLETED_WITHOUT_ERRORS: "COMPLETED WITHOUT ERRORS",

  /**
   * value: "ERRORS OCCURRED"
   * @const
   */
  ERRORS_OCCURRED: "ERRORS OCCURRED"
};
/**
 * shows information about whether the harvest process of this dataset completed without errors or whether something went wrong
 * @member {module:model/SummaryType.HarvestProcessResultEnum} harvestProcessResult
 */
SummaryType.prototype.harvestProcessResult = undefined;

/**
 * @member {Array.<module:model/SummaryTypeErrorsOccurred>} errorsOccurred
 */
SummaryType.prototype.errorsOccurred = undefined;

